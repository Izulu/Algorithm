public class MaxPQ<Key extends Comparable<Key> >
{
  private Key[] pq;
  private int N;
  
  public MaxPQ(int capacity) {
    pq = (Key[]) new Comparable[capacity+1]; //fixed capacity for simplicity.
  }
  
  public boolean isEmpty() {
    return N == 0;
  } 
  
  public void insert(Key key) // To be finished.
  
  public Key delMax(){
  
  }
  
  public void swim(int k){
  }
  
  public void sink(int k){
  }
  
  private boolean less(int i,int j){
  return pq[i].compareTo(pq[j]) < 0;
  }
  private void exch(int i,int j){
  Key t = pq[i];pq[i]=pq[j];pq[j]=t;
  }
}
